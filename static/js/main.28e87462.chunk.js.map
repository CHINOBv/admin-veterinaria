{"version":3,"sources":["components/Header.jsx","components/Addcitas.jsx","components/Cita.jsx","components/Listcitas.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","className","this","props","titulo","Component","Addcitas","NMascota","React","createRef","NDue","Fecha","Hora","Sintomas","state","CrearCita","e","preventDefault","current","value","setState","Nuevacita","uuid","Crearcita","currentTarget","reset","error","onSubmit","type","placeholder","ref","role","Cita","DelCita","info","id","onClick","Listcitas","citas","message","Object","keys","length","map","key","App","filter","cita","localStorage","setItem","JSON","stringify","CitasLS","getItem","parse","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"8TAiBeA,G,uLAZX,OACE,gCACE,wBAAIC,UAAU,0BAA0BC,KAAKC,MAAMC,a,GAJtCC,c,iBC6HNC,E,2MA3HbC,SAAWC,IAAMC,Y,EACjBC,KAAOF,IAAMC,Y,EACbE,MAAQH,IAAMC,Y,EACdG,KAAOJ,IAAMC,Y,EACbI,SAAWL,IAAMC,Y,EAEjBK,MAAQ,CAEN,OAAQ,G,EAGVC,UAAY,SAAAC,GAEVA,EAAEC,iBAEF,IAAMV,EAAU,EAAKA,SAASW,QAAQC,MAChCT,EAAM,EAAKA,KAAKQ,QAAQC,MACxBR,EAAO,EAAKA,MAAMO,QAAQC,MAC1BP,EAAM,EAAKA,KAAKM,QAAQC,MACxBN,EAAS,EAAKA,SAASK,QAAQC,MAGrC,GAAc,KAAXZ,GAAyB,KAARG,GAAqB,KAARC,GAAoB,KAAPC,GAAuB,KAAXC,EACxD,EAAKO,SAAS,CACZ,OAAQ,QAEP,CAGH,IAAMC,EAAY,CAChB,GAAMC,MACNf,WACAG,OACAC,QACAC,OACAC,YAGF,EAAKV,MAAMoB,UAAUF,GAErBL,EAAEQ,cAAcC,U,wEAIlB,IAAMC,EAAQxB,KAAKY,MAAMY,MACzB,OACE,yBAAKzB,UAAU,aACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,8BAAd,oBACA,0BAAM0B,SAAUzB,KAAKa,WACnB,yBAAKd,UAAU,kBACb,2BAAOA,UAAU,oCAAjB,kBAGA,yBAAKA,UAAU,sBACb,2BACE2B,KAAK,OACL3B,UAAU,eACV4B,YAAY,iBACZC,IAAK5B,KAAKK,aAIhB,yBAAKN,UAAU,kBACb,2BAAOA,UAAU,oCAAjB,mBAGA,yBAAKA,UAAU,sBACb,2BACE2B,KAAK,OACL3B,UAAU,eACV4B,YAAY,gCACZC,IAAK5B,KAAKQ,SAKhB,yBAAKT,UAAU,kBACb,2BAAOA,UAAU,oCAAjB,SACA,yBAAKA,UAAU,mCACb,2BAAO2B,KAAK,OAAO3B,UAAU,eAAe6B,IAAK5B,KAAKS,SAGxD,2BAAOV,UAAU,oCAAjB,QACA,yBAAKA,UAAU,qBACb,2BAAO2B,KAAK,OAAO3B,UAAU,eAAe6B,IAAK5B,KAAKU,SAI1D,yBAAKX,UAAU,kBACb,2BAAOA,UAAU,oCAAjB,YAGA,yBAAKA,UAAU,sBACb,8BACEA,UAAU,eACV6B,IAAK5B,KAAKW,aAIhB,yBAAKZ,UAAU,cACb,4BAAQ2B,KAAK,SAAS3B,UAAU,yBAAhC,aAMFyB,EACF,yBAAKzB,UAAU,iCAAiC8B,KAAK,SAArD,qCAIA,S,GAjHa1B,aCwCR2B,E,2MAxCblB,MAAQ,G,EACRmB,QAAQ,WAEN,EAAK9B,MAAM8B,QAAQ,EAAK9B,MAAM+B,KAAKC,K,wEAE3B,IAAD,EAC2CjC,KAAKC,MAAM+B,KAArD3B,EADD,EACCA,SAAUG,EADX,EACWA,KAAMC,EADjB,EACiBA,MAAOC,EADxB,EACwBA,KAAMC,EAD9B,EAC8BA,SACrC,OACE,yBAAKZ,UAAU,cACb,yBAAKA,UAAU,cACb,wBAAIA,UAAU,QAAd,yBAA4CM,GAC5C,uBAAGN,UAAU,aACX,uDAAgCS,GAElC,uBAAGT,UAAU,aACX,yCAAqBU,GAEvB,uBAAGV,UAAU,aACX,wCAAoBW,GAEtB,uBAAGX,UAAU,aACX,4CAAwBY,GAE1B,uBAAGZ,UAAU,eACb,4BAAQA,UAAU,2BAA2BmC,QAASlC,KAAK+B,SAA3D,gB,GAzBS5B,aC6BJgC,E,2MA1BbvB,MAAQ,G,wEACE,IAAD,OACDwB,EAAQpC,KAAKC,MAAMmC,MACnBC,EAC0B,IAA9BC,OAAOC,KAAKH,GAAOI,OAAe,eAAiB,uBACrD,OACE,yBAAKzC,UAAU,QACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,0BAA0BsC,GACvCC,OAAOC,KAAKH,GAAOK,KAAI,SAAAL,GAAK,OACzB,kBAAC,EAAD,CACAM,IAAKN,EACLJ,KAAM,EAAK/B,MAAMmC,MAAMA,GACvBL,QAAS,EAAK9B,MAAM8B,mB,GAdV5B,aCqETwC,E,2MAlEb/B,MAAQ,CACNwB,MAAM,I,EAqBRf,UAAU,SAACF,GACT,IAAMiB,EAAK,sBAAO,EAAKxB,MAAMwB,OAAlB,CAAwBjB,IAEnC,EAAKD,SAAS,CACZkB,W,EAIJL,QAAQ,SAAAE,GAEN,IAGMG,EAHU,YAAM,EAAKxB,MAAMwB,OAGRQ,QAAO,SAAAC,GAAI,OAAEA,EAAKZ,KAAOA,KAIlD,EAAKf,SAAS,CACZkB,W,oFAnCFU,aAAaC,QACX,QACAC,KAAKC,UAAUjD,KAAKY,MAAMwB,U,0CAK7B,IAAMc,EAASJ,aAAaK,QAC1B,SAEED,GACDlD,KAAKkB,SAAS,CACZ,MAAS8B,KAAKI,MAAMF,O,+BA4BxB,OACE,yBAAKnD,UAAU,aACb,kBAAC,EAAD,CAAQG,OAAO,+BACf,yBAAKH,UAAU,OACb,yBAAKA,UAAU,YACb,kBAAC,EAAD,CACAsB,UAAWrB,KAAKqB,aAGlB,yBAAKtB,UAAU,YACb,kBAAC,EAAD,CACAqC,MAAOpC,KAAKY,MAAMwB,MAClBL,QAAS/B,KAAK+B,iB,GA1DR5B,aCKZkD,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBxD,QACfkD,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,WAO5BU,OAAM,SAAApD,GACLgD,QAAQhD,MAAM,4CAA6CA,M,YCrFjEqD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDW1C,SAAkBnB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAImB,IAAIC,qBAAwB3B,OAAOC,SAAS2B,MACpDC,SAAW7B,OAAOC,SAAS4B,OAIvC,OAGF7B,OAAO8B,iBAAiB,QAAQ,WAC9B,IAAMzB,EAAK,UAAMsB,qBAAN,sBAEP7B,IAgEV,SAAiCO,EAAOC,GAEtCyB,MAAM1B,GACHK,MAAK,SAAAsB,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5C9B,UAAUC,cAAc8B,MAAM5B,MAAK,SAAAC,GACjCA,EAAa4B,aAAa7B,MAAK,WAC7BV,OAAOC,SAASuC,eAKpBpC,EAAgBC,EAAOC,MAG1Be,OAAM,WACLJ,QAAQC,IACN,oEArFAuB,CAAwBpC,EAAOC,GAI/BC,UAAUC,cAAc8B,MAAM5B,MAAK,WACjCO,QAAQC,IACN,iHAMJd,EAAgBC,EAAOC,OClC/BE,K","file":"static/js/main.28e87462.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\n\nclass Header extends Component {\n  render() {\n    return (\n      <header>\n        <h1 className=\"text-center text-white\">{this.props.titulo}</h1>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes={\n  titulo: PropTypes.string.isRequired\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport uuid from \"uuid\";\nimport PropTypes from 'prop-types';\n\nclass Addcitas extends Component {\n  NMascota = React.createRef();\n  NDue = React.createRef();\n  Fecha = React.createRef();\n  Hora = React.createRef();\n  Sintomas = React.createRef();\n\n  state = {\n\n    \"error\":false\n  };\n\n  CrearCita = e => {\n    //Prevenir Default\n    e.preventDefault();\n\n    const NMascota= this.NMascota.current.value,\n          NDue= this.NDue.current.value,\n          Fecha= this.Fecha.current.value,\n          Hora= this.Hora.current.value,\n          Sintomas=this.Sintomas.current.value;\n\n    //validate fields\n    if(NMascota===\"\" || NDue=== \"\"|| Fecha===\"\"|| Hora===\"\"|| Sintomas===\"\"){\n      this.setState({\n        \"error\":true\n      })\n    }else{\n\n      //Create Oject Whit Data of Citas\n      const Nuevacita = {\n        \"id\": uuid(),\n        NMascota,\n        NDue,\n        Fecha,\n        Hora,\n        Sintomas\n      };\n      //Send Object to App.js\n      this.props.Crearcita(Nuevacita);\n      //Reset\n      e.currentTarget.reset();\n    }\n  };\n  render() {\n    const error = this.state.error;\n    return (\n      <div className=\"card md-5\">\n        <div className=\"card-body\">\n          <h2 className=\"card-text mb-5 text-center\"> Agrega Una Cita</h2>\n          <form onSubmit={this.CrearCita}>\n            <div className=\"form-group row\">\n              <label className=\"col-sm-4 col-lg-2 col-form-label\">\n                Nombre Mascota\n              </label>\n              <div className=\"col-sm-8 col-lg-10\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Nombre Mascota\"\n                  ref={this.NMascota}\n                />\n              </div>\n            </div>\n            <div className=\"form-group row\">\n              <label className=\"col-sm-4 col-lg-2 col-form-label\">\n                Nombre Dueño\n              </label>\n              <div className=\"col-sm-8 col-lg-10\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"Nombre Dueño de la Mascota\"\n                  ref={this.NDue}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group row\">\n              <label className=\"col-sm-4 col-lg-2 col-form-label\">Fecha</label>\n              <div className=\"col-sm-8 col-lg-4  mb-4 mb-lg-0\">\n                <input type=\"date\" className=\"form-control\" ref={this.Fecha} />\n              </div>\n\n              <label className=\"col-sm-4 col-lg-2 col-form-label\">Hora</label>\n              <div className=\"col-sm-8 col-lg-4\">\n                <input type=\"time\" className=\"form-control\" ref={this.Hora} />\n              </div>\n            </div>\n\n            <div className=\"form-group row\">\n              <label className=\"col-sm-4 col-lg-2 col-form-label\">\n                Sintomas\n              </label>\n              <div className=\"col-sm-8 col-lg-10\">\n                <textarea\n                  className=\"form-control\"\n                  ref={this.Sintomas}\n                ></textarea>\n              </div>\n            </div>\n            <div className=\"form-group\">\n              <button type=\"submit\" className=\"btn btn-success w-100\">\n                Agregar\n              </button>\n            </div>\n          </form>\n          {\n            error?\n          <div className=\"alert alert-danger text-center\" role=\"alert\">\n              Favor de llenar  todos los campos\n          </div>\n          :\n          \"\"\n          }\n        </div>\n      </div>\n    );\n  }\n}\nAddcitas.propTypes={\n  Crearcita: PropTypes.func.isRequired\n}\n\nexport default Addcitas;\n","import React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\n\nclass Cita extends Component {\n  state = {};\n  DelCita=()=>{\n    //send\n    this.props.DelCita(this.props.info.id);\n  }\n  render() {\n    const { NMascota, NDue, Fecha, Hora, Sintomas } = this.props.info;\n    return (\n      <div className=\"media mt-3\">\n        <div className=\"media-body\">\n          <h3 className=\"mt-0\">Nombre de la Mascota: {NMascota}</h3>\n          <p className=\"card-text\">\n            <span>Nombre del Dueño: </span>{NDue}\n          </p>\n          <p className=\"card-text\">\n            <span>Fecha: </span>{Fecha}\n          </p>\n          <p className=\"card-text\">\n            <span>Hora: </span>{Hora}\n          </p>\n          <p className=\"card-text\">\n            <span>Sintomas: </span>{Sintomas}\n          </p>\n          <p className=\"card-title\"></p>\n          <button className=\"btn btn-danger btn-block\" onClick={this.DelCita}>Borrar</button>\n        </div>\n      </div>\n    );\n  }\n}\nCita.propTypes={\n  info: PropTypes.shape({\n    Fecha: PropTypes.string.isRequired,\n    Hora: PropTypes.string.isRequired,\n    NMascota: PropTypes.string.isRequired,\n    NDue: PropTypes.string.isRequired,\n    Sintomas: PropTypes.string.isRequired\n  }),\n  DelCita: PropTypes.func.isRequired\n}\nexport default Cita;\n","import React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\n\nimport Cita from './Cita.jsx'\n\nclass Listcitas extends Component {\n  state = {};\n  render() {\n    const citas = this.props.citas;\n    const message =\n      Object.keys(citas).length === 0 ? \"No Hay Citas\" : \"Administra tus Citas\";\n    return (\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <h3 className=\"card-title text-center\">{message}</h3>\n          {Object.keys(citas).map(citas =>(\n              <Cita\n              key={citas}\n              info={this.props.citas[citas]}\n              DelCita={this.props.DelCita}\n              />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\nListcitas.propTypes={\n  citas: PropTypes.array.isRequired,\n  DelCita: PropTypes.func.isRequired\n}\n\nexport default Listcitas;\n","import React,{Component} from \"react\";\nimport \"./Styles.css\";\n\nimport Header from \"./components/Header.jsx\";\nimport Addcitas from \"./components/Addcitas.jsx\";\nimport Listcitas from \"./components/Listcitas.jsx\";\n\nclass App extends Component {\n  state = {\n    citas:[]\n  };\n\n  componentDidUpdate() {\n    localStorage.setItem(\n      \"citas\",\n      JSON.stringify(this.state.citas)\n   )\n  }\n  \n  componentDidMount() {\n   const CitasLS= localStorage.getItem(\n     \"citas\" \n    );\n    if(CitasLS){\n      this.setState({\n        \"citas\": JSON.parse(CitasLS)\n      })\n    }\n  }\n\n  Crearcita=(Nuevacita)=>{\n    const citas = [...this.state.citas,Nuevacita];\n    \n    this.setState({\n      citas\n    })\n    \n  }\n  DelCita=id=>{\n    //Copy State\n    const citaActual =[...this.state.citas];\n    \n    //Del State\n    const citas = citaActual.filter(cita=>cita.id !== id);\n\n\n    //Update State\n    this.setState({\n      citas\n    })\n\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <Header titulo=\"Administrador de Pacientes\" />\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <Addcitas \n            Crearcita={this.Crearcita}\n            />\n          </div>\n          <div className=\"col-md-6\">\n            <Listcitas\n            citas={this.state.citas}\n            DelCita={this.DelCita}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\n//import Bootstrap 4\nimport './App.css'\nimport 'bootstrap/dist/js/bootstrap.js'\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}